{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/seniorproject/Documents/GitHub/que-ue-rn/Application/Components/Admin/ManageHouse/ManageFloor/FloorList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { FAB, Modal, TextInput, Title, Button, Card } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createNewFloor, getFloors } from \"./FloorController\";\n\nfunction Floor(props) {\n  var name = props.name,\n      tables = props.tables,\n      isActive = props.isActive;\n\n  var _React$useState = React.useState(Boolean(props.isEditing));\n\n  var _React$useState2 = _slicedToArray(_React$useState, 2);\n\n  viewDetails = _React$useState2[0];\n  setViewDetails = _React$useState2[1];\n  var navigation = useNavigation();\n  return React.createElement(Card, {\n    onPress: function onPress() {\n      navigation.navigate(\"floor-details\", {\n        id: props.id\n      });\n    },\n    style: {\n      width: 250,\n      height: 250,\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Card.Title, {\n    title: name,\n    subtitle: \"Card Subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nimport { floor } from \"react-native-reanimated\";\n\nvar FloorList = function (_React$Component) {\n  _inherits(FloorList, _React$Component);\n\n  var _super = _createSuper(FloorList);\n\n  function FloorList(props) {\n    var _this;\n\n    _classCallCheck(this, FloorList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      newFloorName: null,\n      floors: null\n    };\n    return _this;\n  }\n\n  _createClass(FloorList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getFloors().then(function (result) {\n        _this2.setState({\n          floors: result.r\n        });\n      }).catch(function (err) {});\n      console.log(\"floors\", this.state.floors);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          newFloorName = _this$state.newFloorName,\n          floors = _this$state.floors;\n\n      var listFloors = function listFloors() {\n        return floors.map(function (floor) {\n          return React.createElement(Floor, _extends({}, floor, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 36\n            }\n          }));\n        });\n      };\n\n      return React.createElement(KeyboardAvoidingView, {\n        behavior: \"height\",\n        style: styles.wrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.floorContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, floors === null ? React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 32\n        }\n      }, \"loading...\") : listFloors())), React.createElement(FAB, {\n        style: styles.fab,\n        icon: \"plus\",\n        onPress: function onPress() {\n          _this3.setState({\n            newFloorName: \"\"\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), React.createElement(Modal, {\n        contentContainerStyle: {\n          backgroundColor: \"white\",\n          padding: 20\n        },\n        visible: newFloorName !== null,\n        onDismiss: function onDismiss() {\n          _this3.setState({\n            newFloorName: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        behavior: \"height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"New Floor\"), React.createElement(TextInput, {\n        value: newFloorName,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            newFloorName: text\n          });\n        },\n        style: {\n          marginBottom: 30\n        },\n        label: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: \"row-reverse\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          createNewFloor(newFloorName).then(function (result) {\n            _this3.setState({\n              newFloorName: null,\n              floors: [].concat(_toConsumableArray(floors), [result])\n            });\n          }).catch(function (err) {\n            console.error(err);\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, \"Create\"), React.createElement(Button, {\n        onPress: function onPress() {\n          _this3.setState({\n            newFloorName: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return FloorList;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: \"absolute\",\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0\n  },\n  fab: {\n    position: \"absolute\",\n    margin: 16,\n    right: 0,\n    bottom: 0\n  },\n  scrollView: {\n    position: \"relative\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0\n  },\n  floorContainer: {\n    flex: 1,\n    position: \"relative\",\n    right: 0,\n    left: 0,\n    flexWrap: \"wrap\"\n  },\n  floor: {\n    width: 250,\n    height: 250,\n    margin: 20\n  }\n});\nexport default FloorList;","map":{"version":3,"sources":["/Users/seniorproject/Documents/GitHub/que-ue-rn/Application/Components/Admin/ManageHouse/ManageFloor/FloorList.js"],"names":["React","FAB","Modal","TextInput","Title","Button","Card","useNavigation","createNewFloor","getFloors","Floor","props","name","tables","isActive","useState","Boolean","isEditing","viewDetails","setViewDetails","navigation","navigate","id","width","height","margin","floor","FloorList","state","newFloorName","floors","then","result","setState","r","catch","err","console","log","listFloors","map","styles","wrapper","scrollView","floorContainer","fab","backgroundColor","padding","text","marginBottom","flexDirection","error","Component","StyleSheet","create","position","bottom","top","right","left","flex","flexWrap"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { FAB, Modal, TextInput, Title, Button, Card } from \"react-native-paper\";\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createNewFloor, getFloors } from \"./FloorController\";\n\nfunction Floor(props) {\n  const { name, tables, isActive } = props;\n  [viewDetails, setViewDetails] = React.useState(Boolean(props.isEditing));\n\n  const navigation = useNavigation();\n  return (\n    <Card\n      onPress={() => {\n        navigation.navigate(\"floor-details\", { id: props.id });\n      }}\n      style={{\n        width: 250,\n        height: 250,\n        margin: 20,\n      }}\n    >\n      <Card.Title title={name} subtitle=\"Card Subtitle\" />\n    </Card>\n  );\n}\n\nimport { floor } from \"react-native-reanimated\";\nclass FloorList extends React.Component {\n  // floors = await getFloors();\n  //const [floors, setFloors] = React.useState(getFloors());\n  constructor(props) {\n    super(props);\n    this.state = {\n      newFloorName: null,\n      floors: null,\n    };\n  }\n  componentDidMount() {\n    getFloors()\n      .then((result) => {\n        this.setState({ floors: result.r });\n      })\n      .catch((err) => {});\n    console.log(\"floors\", this.state.floors);\n  }\n  render() {\n    const { newFloorName, floors } = this.state;\n    const listFloors = () => {\n      return floors.map((floor) => <Floor {...floor} />);\n    };\n    return (\n      <KeyboardAvoidingView behavior=\"height\" style={styles.wrapper}>\n        <ScrollView horizontal style={styles.scrollView}>\n          <View style={styles.floorContainer}>\n            {floors === null ? <Text>loading...</Text> : listFloors()}\n          </View>\n        </ScrollView>\n        <FAB\n          style={styles.fab}\n          icon=\"plus\"\n          onPress={() => {\n            this.setState({ newFloorName: \"\" });\n          }}\n        />\n        <Modal\n          contentContainerStyle={{ backgroundColor: \"white\", padding: 20 }}\n          visible={newFloorName !== null}\n          onDismiss={() => {\n            this.setState({ newFloorName: null });\n          }}\n        >\n          <KeyboardAvoidingView behavior=\"height\">\n            <Title>New Floor</Title>\n            <TextInput\n              value={newFloorName}\n              onChangeText={(text) => {\n                this.setState({ newFloorName: text });\n              }}\n              style={{ marginBottom: 30 }}\n              label=\"Name\"\n            ></TextInput>\n            <View style={{ flexDirection: \"row-reverse\" }}>\n              <Button\n                onPress={() => {\n                  createNewFloor(newFloorName)\n                    .then((result) => {\n                      this.setState({\n                        newFloorName: null,\n                        floors: [...floors, result],\n                      });\n                    })\n                    .catch((err) => {\n                      console.error(err);\n                    });\n                }}\n              >\n                Create\n              </Button>\n              <Button\n                onPress={() => {\n                  this.setState({ newFloorName: null });\n                }}\n              >\n                Cancel\n              </Button>\n            </View>\n          </KeyboardAvoidingView>\n        </Modal>\n      </KeyboardAvoidingView>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: \"absolute\",\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0,\n    // backgroundColor: \"#e3d7cf\",\n  },\n  fab: {\n    position: \"absolute\",\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  scrollView: {\n    position: \"relative\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  floorContainer: {\n    flex: 1,\n    position: \"relative\",\n    right: 0,\n    left: 0,\n    flexWrap: \"wrap\",\n    //backgroundColor: \"#f59042\",\n  },\n  floor: {\n    width: 250,\n    height: 250,\n    margin: 20,\n  },\n});\nexport default FloorList;\n"]},"metadata":{},"sourceType":"module"}